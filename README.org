#+TITLE: Connexpay API client for Haskell
#+AUTHOR: Nick <nick@typeable.io>

* What

ConnexPay is a credit card payment processing provider.

* How to use this library

Here is a short example:

#+begin_src
let logf msg = Text.putStrLn ("Connexpay log: " <> msg)
    cc = CreditCard ...
    amount = Money @USD 5.00
    vendor = Just "Best vendor out there"
httpmgr <- tlsManager
pay <- initConnexpay logf httpmgr deviceGuid cpHost True login password

runConnexpay pay $ do
  sale <- authorisePayment cc amount vendor
  capturePayment sale.paymentGuid
#+end_src

For more information, see Haddock docs.

NOTE:
'PaymentError' type isn't used yet, but it will after more testing.
Connexpay test environment doesn't seem to report errors adequately.

* Links

Credit card sales API: https://docs.connexpay.com/reference/credit-card-sales
